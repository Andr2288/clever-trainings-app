import React from 'react';
import { Clock, Zap, Dumbbell, Heart, Target, Info } from 'lucide-react';

const WorkoutCard = ({ workout, showCompletedBadge = false, isActive = false }) => {
    const [showDetails, setShowDetails] = React.useState(false);

    const getIntensityColor = (intensity) => {
        switch(intensity.toLowerCase()) {
            case '–ª–µ–≥–∫–∞':
            case '–Ω–∏–∑—å–∫–∞':
                return 'bg-green-100 text-green-800';
            case '—Å–µ—Ä–µ–¥–Ω—è':
                return 'bg-yellow-100 text-yellow-800';
            case '–≤–∏—Å–æ–∫–∞':
            case '–≤–∏—Å–æ–∫–∏–π':
                return 'bg-red-100 text-red-800';
            default:
                return 'bg-gray-100 text-gray-800';
        }
    };

    const getTypeIcon = (type) => {
        switch(type.toLowerCase()) {
            case '–∫–∞—Ä–¥—ñ–æ':
                return <Heart size={18} className="text-red-500" />;
            case '—Å–∏–ª–æ–≤—ñ':
                return <Dumbbell size={18} className="text-blue-500" />;
            default:
                return <Target size={18} className="text-purple-500" />;
        }
    };

    const getDifficultyStars = (intensity) => {
        const level = intensity.toLowerCase();
        let stars = 1;
        if (level.includes('—Å–µ—Ä–µ–¥–Ω—è') || level.includes('moderate')) stars = 2;
        if (level.includes('–≤–∏—Å–æ–∫–∞') || level.includes('–≤–∏—Å–æ–∫–∏–π') || level.includes('advanced')) stars = 3;

        return '‚òÖ'.repeat(stars) + '‚òÜ'.repeat(3 - stars);
    };

    const getEstimatedCalories = (type, duration, intensity) => {
        // –ü—Ä–∏–±–ª–∏–∑–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∫–∞–ª–æ—Ä—ñ–π (–¥–ª—è –ª—é–¥–∏–Ω–∏ ~70–∫–≥)
        let caloriesPerMinute = 5; // –±–∞–∑–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è

        if (type.toLowerCase().includes('–∫–∞—Ä–¥—ñ–æ')) {
            caloriesPerMinute = intensity.toLowerCase().includes('–≤–∏—Å–æ–∫–∞') ? 12 :
                intensity.toLowerCase().includes('—Å–µ—Ä–µ–¥–Ω—è') ? 8 : 5;
        } else if (type.toLowerCase().includes('—Å–∏–ª–æ–≤—ñ')) {
            caloriesPerMinute = intensity.toLowerCase().includes('–≤–∏—Å–æ–∫–∞') ? 8 :
                intensity.toLowerCase().includes('—Å–µ—Ä–µ–¥–Ω—è') ? 6 : 4;
        }

        return Math.round(duration * caloriesPerMinute);
    };

    const estimatedCalories = getEstimatedCalories(workout.type, workout.duration, workout.intensity);

    return (
        <div className={`bg-white shadow-md rounded-2xl overflow-hidden transition-all duration-300 ${
            isActive
                ? 'ring-4 ring-green-300 shadow-xl transform scale-105'
                : 'hover:shadow-lg hover:transform hover:scale-102'
        }`}>

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="relative">
                <div className="p-4 pb-2">
                    <div className="flex justify-between items-start mb-2">
                        <h3 className="text-xl font-semibold text-gray-800 flex-1 pr-2">
                            {workout.name}
                        </h3>
                        <button
                            onClick={() => setShowDetails(!showDetails)}
                            className="p-1 text-gray-400 hover:text-blue-600 transition"
                            title="–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"
                        >
                            <Info size={16} />
                        </button>
                    </div>

                    {/* –ë–µ–π–¥–∂—ñ —Ç–∞ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ */}
                    <div className="flex flex-wrap gap-2 mb-3">
                        <div className="flex items-center space-x-1 bg-blue-50 px-2 py-1 rounded-full">
                            {getTypeIcon(workout.type)}
                            <span className="text-xs font-medium text-gray-700">{workout.type}</span>
                        </div>

                        <span className={`text-xs px-2 py-1 rounded-full font-medium ${getIntensityColor(workout.intensity)}`}>
              {workout.intensity}
            </span>

                        {showCompletedBadge && (
                            <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">
                ‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ
              </span>
                        )}

                        {isActive && (
                            <span className="text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full font-medium animate-pulse">
                üî• –ê–∫—Ç–∏–≤–Ω–µ
              </span>
                        )}
                    </div>
                </div>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <div className="px-4 pb-4">
                {/* –û—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ */}
                <div className="grid grid-cols-2 gap-3 mb-3">
                    <div className="flex items-center space-x-2 bg-gray-50 p-3 rounded-lg">
                        <Clock size={18} className="text-blue-500" />
                        <div>
                            <p className="font-bold text-gray-800">{workout.duration}</p>
                            <p className="text-xs text-gray-600">—Ö–≤–∏–ª–∏–Ω</p>
                        </div>
                    </div>

                    <div className="flex items-center space-x-2 bg-gray-50 p-3 rounded-lg">
                        <Zap size={18} className="text-orange-500" />
                        <div>
                            <p className="font-bold text-gray-800">~{estimatedCalories}</p>
                            <p className="text-xs text-gray-600">–∫–∞–ª–æ—Ä—ñ–π</p>
                        </div>
                    </div>
                </div>

                {/* –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å */}
                <div className="flex justify-between items-center mb-3 p-2 bg-gray-50 rounded-lg">
                    <span className="text-sm text-gray-600">–°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:</span>
                    <span className="text-yellow-500 text-lg" title={`${workout.intensity} —Ä—ñ–≤–µ–Ω—å`}>
            {getDifficultyStars(workout.intensity)}
          </span>
                </div>

                {/* –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è */}
                {workout.equipment && (
                    <div className="mb-3 p-2 bg-blue-50 rounded-lg">
                        <span className="text-sm text-gray-600">–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è: </span>
                        <span className="text-sm font-medium text-blue-700">{workout.equipment}</span>
                    </div>
                )}

                {/* –û–ø–∏—Å */}
                {workout.description && (
                    <p className="text-gray-600 text-sm mb-3 leading-relaxed">
                        {workout.description}
                    </p>
                )}

                {/* –†–æ–∑—à–∏—Ä–µ–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                {showDetails && (
                    <div className="border-t pt-3 mt-3 space-y-3">
                        {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó */}
                        <div className="bg-yellow-50 p-3 rounded-lg">
                            <h4 className="text-sm font-medium text-yellow-800 mb-2">üí° –ü–æ—Ä–∞–¥–∏:</h4>
                            <ul className="text-xs text-yellow-700 space-y-1">
                                {workout.type.toLowerCase().includes('–∫–∞—Ä–¥—ñ–æ') && (
                                    <>
                                        <li>‚Ä¢ –ü—ñ–¥—Ç—Ä–∏–º—É–π—Ç–µ —Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–µ –¥–∏—Ö–∞–Ω–Ω—è</li>
                                        <li>‚Ä¢ –¢—Ä–∏–º–∞–π—Ç–µ –ø—É–ª—å—Å —É —Ü—ñ–ª—å–æ–≤—ñ–π –∑–æ–Ω—ñ</li>
                                    </>
                                )}
                                {workout.type.toLowerCase().includes('—Å–∏–ª–æ–≤—ñ') && (
                                    <>
                                        <li>‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ —Ç–µ—Ö–Ω—ñ–∫—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è</li>
                                        <li>‚Ä¢ –†–æ–±—ñ—Ç—å –ø–∞—É–∑–∏ –º—ñ–∂ –ø—ñ–¥—Ö–æ–¥–∞–º–∏</li>
                                    </>
                                )}
                                <li>‚Ä¢ –ü–∏–π—Ç–µ –≤–æ–¥—É –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</li>
                                <li>‚Ä¢ –ó—É–ø–∏–Ω—ñ—Ç—å—Å—è –ø—Ä–∏ –±–æ–ª—é —á–∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç—ñ</li>
                            </ul>
                        </div>

                        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                        <div className="grid grid-cols-2 gap-3 text-xs text-gray-600">
                            <div>
                                <span className="font-medium">–¶—ñ–ª—å–æ–≤—ñ –º'—è–∑–∏:</span>
                                <div className="mt-1">
                                    {workout.type.toLowerCase().includes('–∫–∞—Ä–¥—ñ–æ') && '‚ù§Ô∏è –°–µ—Ä—Ü–µ, –∑–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å'}
                                    {workout.type.toLowerCase().includes('—Å–∏–ª–æ–≤—ñ') && 'üí™ –†—ñ–∑–Ω—ñ –≥—Ä—É–ø–∏ –º\'—è–∑—ñ–≤'}
                                    {!workout.type.toLowerCase().includes('–∫–∞—Ä–¥—ñ–æ') && !workout.type.toLowerCase().includes('—Å–∏–ª–æ–≤—ñ') && 'üéØ –ö–æ–º–ø–ª–µ–∫—Å–Ω–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è'}
                                </div>
                            </div>

                            <div>
                                <span className="font-medium">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞:</span>
                                <div className="mt-1">
                                    {workout.intensity.toLowerCase().includes('–ª–µ–≥–∫–∞') && 'üìÖ –©–æ–¥–Ω—è'}
                                    {workout.intensity.toLowerCase().includes('—Å–µ—Ä–µ–¥–Ω—è') && 'üìÖ 3-4 —Ä–∞–∑–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å'}
                                    {workout.intensity.toLowerCase().includes('–≤–∏—Å–æ–∫–∞') && 'üìÖ 2-3 —Ä–∞–∑–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å'}
                                </div>
                            </div>
                        </div>

                        {/* –ü—Ä–æ–≥—Ä–µ—Å —Ç–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è */}
                        <div className="bg-green-50 p-3 rounded-lg">
                            <p className="text-xs text-green-700">
                                üèÜ <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> –¶–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–∂–µ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –≤–∞—à—É —Ñ—ñ–∑–∏—á–Ω—É —Ñ–æ—Ä–º—É
                                {workout.type.toLowerCase().includes('–∫–∞—Ä–¥—ñ–æ') && ' —Ç–∞ –≤–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏'}
                                {workout.type.toLowerCase().includes('—Å–∏–ª–æ–≤—ñ') && ' —Ç–∞ –Ω–∞—Ä–æ—â—É—î –º\'—è–∑–æ–≤—É –º–∞—Å—É'}!
                            </p>
                        </div>
                    </div>
                )}

                {/* –ß–∞—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (—è–∫—â–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ) */}
                {workout.completedAt && (
                    <div className="mt-3 text-xs text-gray-500 text-center">
                        –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {new Date(workout.completedAt).toLocaleString('uk-UA')}
                        {workout.actualDuration && workout.actualDuration !== workout.duration && (
                            <span className="ml-2 text-blue-600 font-medium">
                (—Ñ–∞–∫—Ç–∏—á–Ω–æ: {workout.actualDuration} —Ö–≤)
              </span>
                        )}
                    </div>
                )}
            </div>
        </div>
    );
};

export default WorkoutCard;