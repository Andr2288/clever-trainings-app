import React from 'react';
import { Plus, Info } from 'lucide-react';

const ProductCard = ({ product, onAdd, showNutritionFacts = false }) => {
    const [showDetails, setShowDetails] = React.useState(false);

    const getNutritionColor = (value, type) => {
        // –ö–æ–ª—å–æ—Ä–æ–≤–µ –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–∞–∫—Ä–æ–µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        switch(type) {
            case 'calories':
                if (value < 100) return 'text-green-600';
                if (value < 300) return 'text-yellow-600';
                return 'text-red-600';
            case 'protein':
                if (value > 15) return 'text-green-600';
                if (value > 5) return 'text-yellow-600';
                return 'text-gray-600';
            case 'fat':
                if (value < 5) return 'text-green-600';
                if (value < 15) return 'text-yellow-600';
                return 'text-red-600';
            case 'carbs':
                if (value < 10) return 'text-green-600';
                if (value < 30) return 'text-yellow-600';
                return 'text-red-600';
            default:
                return 'text-gray-700';
        }
    };

    const getCalorieLevel = (calories) => {
        if (calories < 100) return { level: '–ù–∏–∑—å–∫–∞', color: 'bg-green-100 text-green-800' };
        if (calories < 300) return { level: '–°–µ—Ä–µ–¥–Ω—è', color: 'bg-yellow-100 text-yellow-800' };
        return { level: '–í–∏—Å–æ–∫–∞', color: 'bg-red-100 text-red-800' };
    };

    const calorieLevel = getCalorieLevel(product.calories);

    return (
        <div className="bg-white shadow-md rounded-2xl overflow-hidden hover:shadow-lg transition-all duration-300 hover:transform hover:scale-105">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é */}
            <div className="p-4 pb-2">
                <div className="flex justify-between items-start mb-2">
                    <h3 className="text-xl font-semibold text-gray-800 flex-1">
                        {product.name}
                    </h3>
                    <button
                        onClick={() => setShowDetails(!showDetails)}
                        className="ml-2 p-1 text-gray-400 hover:text-blue-600 transition"
                        title="–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"
                    >
                        <Info size={16} />
                    </button>
                </div>

                {product.category && (
                    <div className="flex justify-between items-center mb-3">
            <span className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
              {product.category}
            </span>
                        <span className={`text-xs px-2 py-1 rounded-full font-medium ${calorieLevel.color}`}>
              {calorieLevel.level} –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å
            </span>
                    </div>
                )}
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <div className="px-4 pb-3">
                {/* –ö–∞–ª–æ—Ä—ñ—ó - –≤–∏–¥—ñ–ª–µ–Ω–æ */}
                <div className="text-center bg-gray-50 p-3 rounded-lg mb-3">
                    <p className={`text-2xl font-bold ${getNutritionColor(product.calories, 'calories')}`}>
                        {product.calories}
                    </p>
                    <p className="text-sm text-gray-600">–∫–∫–∞–ª / 100–≥</p>
                </div>

                {/* –ú–∞–∫—Ä–æ–µ–ª–µ–º–µ–Ω—Ç–∏ */}
                <div className="grid grid-cols-3 gap-2 mb-3">
                    <div className="text-center">
                        <p className={`font-bold ${getNutritionColor(product.protein, 'protein')}`}>
                            {product.protein}–≥
                        </p>
                        <p className="text-xs text-gray-500">–ë—ñ–ª–∫–∏</p>
                    </div>
                    <div className="text-center">
                        <p className={`font-bold ${getNutritionColor(product.fat, 'fat')}`}>
                            {product.fat}–≥
                        </p>
                        <p className="text-xs text-gray-500">–ñ–∏—Ä–∏</p>
                    </div>
                    <div className="text-center">
                        <p className={`font-bold ${getNutritionColor(product.carbs, 'carbs')}`}>
                            {product.carbs}–≥
                        </p>
                        <p className="text-xs text-gray-500">–í—É–≥–ª–µ–≤–æ–¥–∏</p>
                    </div>
                </div>

                {/* –†–æ–∑—à–∏—Ä–µ–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                {showDetails && (
                    <div className="border-t pt-3 mt-3">
                        {product.description && (
                            <p className="text-sm text-gray-600 mb-3">{product.description}</p>
                        )}

                        {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ */}
                        <div className="space-y-2 text-xs text-gray-600">
                            <div className="flex justify-between">
                                <span>–ö–∞–ª–æ—Ä—ñ–π –∑ –±—ñ–ª–∫—ñ–≤:</span>
                                <span>{Math.round(product.protein * 4)} –∫–∫–∞–ª</span>
                            </div>
                            <div className="flex justify-between">
                                <span>–ö–∞–ª–æ—Ä—ñ–π –∑ –∂–∏—Ä—ñ–≤:</span>
                                <span>{Math.round(product.fat * 9)} –∫–∫–∞–ª</span>
                            </div>
                            <div className="flex justify-between">
                                <span>–ö–∞–ª–æ—Ä—ñ–π –∑ –≤—É–≥–ª–µ–≤–æ–¥—ñ–≤:</span>
                                <span>{Math.round(product.carbs * 4)} –∫–∫–∞–ª</span>
                            </div>
                        </div>

                        {/* –ü—ñ–∫—Ç–æ–≥—Ä–∞–º–∏ –ø–æ–∂–∏–≤–Ω–æ—Å—Ç—ñ */}
                        <div className="mt-3 flex flex-wrap gap-1">
                            {product.protein > 15 && (
                                <span className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">
                  üí™ –í–∏—Å–æ–∫–∏–π –±—ñ–ª–æ–∫
                </span>
                            )}
                            {product.fat < 3 && (
                                <span className="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full">
                  üíß –ù–µ–∂–∏—Ä–Ω–∏–π
                </span>
                            )}
                            {product.carbs < 5 && (
                                <span className="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full">
                  ü•¨ –ù–∏–∑—å–∫–æ-–≤—É–≥–ª–µ–≤–æ–¥–Ω–∏–π
                </span>
                            )}
                            {product.calories < 50 && (
                                <span className="text-xs bg-orange-100 text-orange-700 px-2 py-1 rounded-full">
                  üî• –ù–∏–∑—å–∫–æ–∫–∞–ª–æ—Ä—ñ–π–Ω–∏–π
                </span>
                            )}
                        </div>
                    </div>
                )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è */}
            {onAdd && (
                <div className="px-4 pb-4">
                    <button
                        onClick={onAdd}
                        className="w-full bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-all duration-300 font-medium shadow-sm hover:shadow-md"
                    >
                        <Plus size={18} />
                        <span>–î–æ–¥–∞—Ç–∏ –¥–æ —Ä–∞—Ü—ñ–æ–Ω—É</span>
                    </button>
                </div>
            )}

            {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∂–∏–≤–Ω–æ—ó —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ */}
            {showNutritionFacts && (
                <div className="px-4 pb-4">
                    <div className="text-xs text-gray-500 text-center">
                        üí° –ö–ª—ñ–∫–Ω—ñ—Ç—å –Ω–∞ —ñ–∫–æ–Ω–∫—É ‚ÑπÔ∏è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
                    </div>
                </div>
            )}
        </div>
    );
};

export default ProductCard;