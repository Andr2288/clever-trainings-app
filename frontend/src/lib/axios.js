import axios from "axios";

export const axiosInstance = axios.create({
    baseURL: import.meta.env.VITE_API_URL || "http://localhost:3001/api",
    withCredentials: true,
    timeout: 10000, // 10 seconds timeout
    headers: {
        'Content-Type': 'application/json'
    }
});

// Request interceptor –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
axiosInstance.interceptors.request.use(
    (config) => {
        console.log(`üîÑ API Request: ${config.method?.toUpperCase()} ${config.url}`);
        return config;
    },
    (error) => {
        console.error('‚ùå Request Error:', error);
        return Promise.reject(error);
    }
);

// Response interceptor –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
axiosInstance.interceptors.response.use(
    (response) => {
        console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);
        return response;
    },
    (error) => {
        console.error(`‚ùå API Error: ${error.response?.status} ${error.config?.url}`, error.response?.data);

        // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ 401 (Unauthorized), –º–æ–∂–Ω–∞ —Ç—É—Ç –æ–±—Ä–æ–±–∏—Ç–∏
        if (error.response?.status === 401) {
            // –ú–æ–∂–Ω–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∞–±–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ –ª–æ–≥—ñ–Ω
            console.warn('üîí –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –ü–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
        }

        return Promise.reject(error);
    }
);