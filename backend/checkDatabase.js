import { testConnection, checkTables } from '../src/config/database.js';

const checkDatabase = async () => {
    console.log('üîç FitApp - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
    console.log('================================');

    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
        const connected = await testConnection();

        if (!connected) {
            console.log('‚ùå –ù–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
            process.exit(1);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å
        console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å...');
        const tables = await checkTables();

        console.log('üìã –°—Ç–∞–Ω —Ç–∞–±–ª–∏—Ü—å:');
        tables.forEach(table => {
            if (table.exists) {
                console.log(`   ‚úÖ ${table.table} - ${table.count} –∑–∞–ø–∏—Å—ñ–≤`);
            } else {
                console.log(`   ‚ùå ${table.table} - –Ω–µ —ñ—Å–Ω—É—î (${table.error})`);
            }
        });

        const missingTables = tables.filter(t => !t.exists);
        if (missingTables.length > 0) {
            console.log('');
            console.log('‚ö†Ô∏è  –î–µ—è–∫—ñ —Ç–∞–±–ª–∏—Ü—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: npm run setup-db');
        } else {
            console.log('');
            console.log('‚úÖ –í—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ –º—ñ—Å—Ü—ñ! –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏.');
        }

    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:', error.message);
        process.exit(1);
    }
};

checkDatabase();